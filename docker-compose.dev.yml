version: '3'

services:
  react:
    build:
      context: .
      dockerfile: Dockerfile.front
    ports:
      - '3000:3000/tcp'
    volumes:
      - ./front/src:/app/front/src
    depends_on:
      - node
    networks:
      - smat

  node:
    build:
      context: .
      dockerfile: Dockerfile.back
      args:
        NODE_ENV: development
    ports:
      - '3333:3333/tcp'
    volumes:
      - ./back/src:/app/back/src
    environment:
      - NODE_PORT=3333
      - NODE_ENV=development
      - DB_URL=postgres://fmjdaopfplolbs:5d4a2306e7d4e20bb486b644068dca550e056f59c1fd475ef36af6e91751520a@ec2-100-24-169-249.compute-1.amazonaws.com:5432/d5gsauuk2kb32e
    command: npm run dev
    depends_on:
      - postgres
    networks:
      - smat

  postgres:
    image: postgres
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: mydb
    volumes:
      - postgres-db:/var/lib/postgresql/data
    networks:
      - smat

networks:
  smat: {}

volumes:
  postgres-db:
